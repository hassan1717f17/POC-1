{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\POC\\\\mypoc\\\\src\\\\components\\\\FileUploader.js\",\n  _s = $RefreshSig$();\n// src/components/FileUploader.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { GoogleLogin } from 'react-google-login';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '849586484429-7h4720oicljv9b47o67rjkfp1guqv75e.apps.googleusercontent.com'; // Replace with your OAuth 2.0 client ID\n\nconst FileUploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [signInMessage, setSignInMessage] = useState('');\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    // Wait for a short delay to ensure the state is updated\n    await new Promise(resolve => setTimeout(resolve, 100));\n    if (!isLoggedIn) {\n      alert('Please sign in with Google first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('File uploaded successfully');\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while uploading the file');\n    }\n  };\n  const responseGoogle = response => {\n    if (response.accessToken) {\n      setIsLoggedIn(true);\n      setSignInMessage('Sign-in successful'); // Set the sign-in message\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [signInMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: signInMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"Login with Google\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"ZKtXul11jYFHBxaAIGtlHrSewwA=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","axios","GoogleLogin","Button","jsxDEV","_jsxDEV","CLIENT_ID","FileUploader","_s","selectedFile","setSelectedFile","isLoggedIn","setIsLoggedIn","signInMessage","setSignInMessage","handleFileChange","e","target","files","handleUpload","Promise","resolve","setTimeout","alert","formData","FormData","append","post","headers","error","console","responseGoogle","response","accessToken","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","variant","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","_c","$RefreshReg$"],"sources":["D:/projects/POC/mypoc/src/components/FileUploader.js"],"sourcesContent":["// src/components/FileUploader.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst CLIENT_ID = '849586484429-7h4720oicljv9b47o67rjkfp1guqv75e.apps.googleusercontent.com'; // Replace with your OAuth 2.0 client ID\r\n\r\nconst FileUploader = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [signInMessage, setSignInMessage] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    // Wait for a short delay to ensure the state is updated\r\n    await new Promise((resolve) => setTimeout(resolve, 100));\r\n\r\n    if (!isLoggedIn) {\r\n      alert('Please sign in with Google first.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('File uploaded successfully');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('An error occurred while uploading the file');\r\n    }\r\n  };\r\n\r\n  const responseGoogle = (response) => {\r\n    if (response.accessToken) {\r\n      setIsLoggedIn(true);\r\n      setSignInMessage('Sign-in successful'); // Set the sign-in message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {signInMessage && <p>{signInMessage}</p>}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <Button variant=\"primary\" onClick={handleUpload}>\r\n        Upload File\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <GoogleLogin\r\n        clientId={CLIENT_ID}\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}